# 主题页面导航
menu:

# 主题色调
theme_color:
  enable: true
  main: "#49B1F5"
  paginator: "#00c4b6"
  button_hover: "#FF7242"
  text_selection: "#00c4b6"
  link_color: "#99a9bf"
  meta_color: "#858585"
  hr_color: "#A4D8FA"
  code_foreground: "#F47466"
  code_background: "rgba(27, 31, 35, .05)"
  toc_color: "#00c4b6"
  blockquote_padding_color: "#49b1f5"
  blockquote_background_color: "#49b1f5"
  scrollbar_color: "#49b1f5"

# 主页文章布局
index_post_style:
  enable: true
  type: card # card/full/mini

# 深色模式
darkmode:
  enable: true
  button: true
  autoChangeMode: false

# 主页顶部图
index_img: false
default_top_img: false

# 页面效果
# 樱花
sakura:
  enable: true
  mobile: false

# 雪花
snow:
  enable: true
  mobile: false

# 彩带
canvas_ribbon:
  enable: true
  mobile: false

# 背景特效
canvas_fluttering_ribbon:
  enable: true
  mobile: false

# 页面加载动画
preloader: false

# 侧边栏设置
aside:
  enable: true
  hide: false
  button: false
  mobile: true
  position: left
  card_author:
    enable: true
    description: 
    button:
      enable: true
      icon: fab fa-github
      text: Follow Me
      link: https://github.com/koocuu
  card_announcement:
    enable: true
    content: 欢迎来到我的博客！
  card_map:
    enable: true
    content: 
      - title: 首页
        link: /
        icon: fas fa-home
      - title: 归档
        link: /archives/
        icon: fas fa-archive
      - title: 分类
        link: /categories/
        icon: fas fa-folder-open
      - title: 标签
        link: /tags/
        icon: fas fa-tags
      - title: 关于
        link: /about/
        icon: fas fa-heart
  card_recent_post:
    enable: true
    limit: 5
  card_categories:
    enable: true
    limit: 8
    expand: none
  card_tags:
    enable: true
    limit: 40
    color: false
  card_archives:
    enable: true
    type: monthly
    format: MMMM YYYY
    order: -1
    limit: 8

# 文章页面设置
post_meta:
  page:
    date_type: created # created/updated/both
    categories: true
    tags: true
    label: true

# 代码块设置
highlight_theme: mac light
highlight_copy: true
highlight_lang: true
highlight_height_limit: false

# 社交图标
social:
  Github: https://github.com/yourname || fab fa-github
  Email: mailto:your@email.com || fas fa-envelope
  Weibo: https://weibo.com/your-username || fab fa-weibo

# 导航栏设置
nav:
  enable: false

# Header 设置
disable_top_img: true
header:
  enable: false

# 页面标题
page_icon:
  enable: false

# 网站标题显示
blog_title_js:
  enable: false

# 网站标题
site_title:
  enable: false

# 全局禁用标题
disable_title: true

# 页脚设置
footer:
  enable: false

# iframe 支持
frame_preset: true

# 自定义样式注入
inject:
  head:
    - '<style type="text/css">
        .page-header{display:none!important}
        .top-img{display:none!important}
        .page-title{display:none!important}
        .site-page{display:none!important}
        .site-name{display:none!important}
        #page-header{display:none!important}
        body{background:#fff!important}
        #content-inner{margin-top:10px!important;padding-top:0!important}
        #content{margin-top:10px!important;padding-top:0!important}
        .layout{margin-top:10px!important;padding-top:0!important}
        .main-content{margin-top:10px!important;padding-top:0!important}
        .post-title{margin-top:0!important;padding-top:0!important}
        .post-meta{margin-top:0!important;padding-top:0!important}
        .post-content{margin-top:0!important;padding-top:0!important}
      </style>'
    - '<base target="_self">'
    - |
      <script>
        // 检查是否在iframe中
        if (window.self !== window.top) {
          // 在文档加载完成后执行
          document.addEventListener("DOMContentLoaded", function() {
            // 修改所有链接 - 恢复原始逻辑，但增加对"Follow Me"的特殊处理
            function modifyLinks() {
              document.querySelectorAll("a").forEach(function(link) {
                // 保留某些特殊链接（如下载链接）的原始行为
                // 并且现在这里要放行 "Follow Me" 按钮的链接
                if (!link.getAttribute("download")) { // 移除 target 属性检查，因为我们后面会覆盖它
                  // 判断是否是"Follow Me"按钮的链接
                  if (link.href === "https://github.com/koocuu" && link.textContent.trim() === "Follow Me") {
                    link.target = "_blank"; // 强制设置为新窗口打开
                    link.rel = "noopener noreferrer"; // 添加安全属性
                    // 对于 Follow Me 按钮，我们不在这里添加阻止默认行为的监听器
                    // 而是依赖其 target="_blank" 属性，或者下面的强制 window.open
                  } else if (!link.getAttribute("target")) { // 对于其他没有明确 target 的链接
                    link.target = "_self"; // 强制在 iframe 内部打开
                  }

                  // 添加点击事件监听器
                  link.addEventListener("click", function(e) {
                    // 如果是外部链接
                    if (this.hostname !== window.location.hostname) {
                      // 再次检查是否是"Follow Me"按钮
                      if (this.href === "https://github.com/koocuu" && this.textContent.trim() === "Follow Me") {
                        // 如果是"Follow Me"按钮，阻止默认行为，并强制在新窗口打开
                        e.preventDefault();
                        window.open(this.href, "_blank");
                      } else {
                        // 对于其他外部链接，如果它们不是 _blank，则在 iframe 内加载，并处理拒绝连接的情况
                        if (this.target === "_self") { // 确保只处理那些我们希望在 iframe 内打开的外部链接
                          e.preventDefault();
                          // 尝试在当前 iframe 内加载
                          window.location.href = this.href;
                          // 无法直接在这里检测 refuded to connect，但这是其默认行为
                        }
                      }
                    }
                    // 如果是内部链接 (this.hostname === window.location.hostname)，默认行为（target="_self"）将在 iframe 内跳转
                  });
                }
              });
            }

            // 初始修改
            modifyLinks();

            // 拦截动态添加的链接
            const observer = new MutationObserver(function(mutations) {
              mutations.forEach(function(mutation) {
                mutation.addedNodes.forEach(function(node) {
                  if (node.nodeType === 1) { // 元素节点
                    const links = node.getElementsByTagName("a");
                    Array.from(links).forEach(function(link) {
                      if (!link.getAttribute("download")) {
                        if (link.href === "https://github.com/koocuu" && link.textContent.trim() === "Follow Me") {
                          link.target = "_blank";
                          link.rel = "noopener noreferrer";
                        } else if (!link.getAttribute("target")) {
                          link.target = "_self";
                        }

                        link.addEventListener("click", function(e) {
                          if (this.hostname !== window.location.hostname) {
                            if (this.href === "https://github.com/koocuu" && this.textContent.trim() === "Follow Me") {
                              e.preventDefault();
                              window.open(this.href, "_blank");
                            } else {
                              if (this.target === "_self") {
                                e.preventDefault();
                                window.location.href = this.href;
                              }
                            }
                          }
                        });
                      }
                    });
                  }
                });
              });
            });

            observer.observe(document.body, {
              childList: true,
              subtree: true
            });

            // 对于最外层 document 的点击事件监听器 (通常是用于捕获冒泡事件)
            // 我们需要确保它不会干扰 "Follow Me" 按钮
            document.addEventListener("click", function(e) {
              let target = e.target;
              while (target && target.tagName !== "A") {
                target = target.parentElement;
              }
              if (target && target.tagName === "A") {
                // 如果是"Follow Me"按钮，我们不在这里阻止其行为
                if (target.href === 'https://github.com/koocuu' && target.textContent.trim() === 'Follow Me') {
                  // 不做任何操作，让其在新窗口打开
                } else if (target.hostname !== window.location.hostname) {
                  // 对于其他外部链接，如果它们被设置为 _self，则在这里阻止默认行为并在 iframe 内加载
                  if (target.target === "_self") {
                    e.preventDefault();
                    window.location.href = target.href;
                  }
                }
              }
            }, true); // 使用捕获阶段监听器
          });
        }
      </script>'
avatar:
  img: /avatar.png